[project]
name = "fast_zero"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "fastapi[standard]>=0.116.1",
    "uvicorn>=0.35.0",
]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.3",
    "taskipy>=1.14.1",
]

# Ruff Global Config
[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

# Ruff Linter Config
[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']

# Ruff Formatter Config
[tool.ruff.format]
preview = true
quote-style = 'single'

# Pytest Configs
[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'

# Taskipy Configs (Task runner)
# Nota: Todos os comandos do taskipy que apresentam prefixos como pre_comando ou 
# post_comando não precisam ser executados diretamente. Por exemplo, se executarmos
# o comando task test ele executará o comando pre_test e caso tudo ocorra bem, sem erros,
# ele executará o test, caso não aconteçam erros, o post_test será executado.
[tool.taskipy.tasks]
lint = 'ruff check'
pre_format = 'ruff check --fix'
format = 'ruff format'
run = 'fastapi dev src/app.py'
pre_test = 'task lint'
test = 'pytest -s -x --cov=src -vv'
post_test = 'coverage html'
